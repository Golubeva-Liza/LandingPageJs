{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,iEAAe,IAAI;;;;;;;;;;;;;;;AChI8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,iEAAiE;AACjE,+BAA+B;AAC/B,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,mDAAmD,kCAAkC;AACrF;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc,MAAM,SAAS;AACxD,kDAAkD,WAAW;AAC7D,gDAAgD,aAAa;AAC7D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACtE0B;AACA;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA,kCAAkC;AAClC;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC9GpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACD;;;;;;;;;;;;;;;ACvFpB,kBAAkB,qFAAqF;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,MAAM;AACN;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qEAAqE;AACrE;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mDAAmD;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD,SAAS,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACjLrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,qCAAqC;AACrC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACjDnB;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;ACpEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACkB;;;;;;;UCtClB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACkC;AACE;AACA;AACA;AACE;AACJ;AACE;AACM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yDAAS;AACnD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;AACP,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,CAAC;AACD","sources":["webpack://food_dist/./js/modules/calc.js","webpack://food_dist/./js/modules/cards.js","webpack://food_dist/./js/modules/forms.js","webpack://food_dist/./js/modules/modal.js","webpack://food_dist/./js/modules/slider.js","webpack://food_dist/./js/modules/tabs.js","webpack://food_dist/./js/modules/timer.js","webpack://food_dist/./js/services/services.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["function calc (){\r\n        // КАЛЬКУЛЯТОР\r\n\r\n    // Формула расчета базовой нормы калорий:\r\n    // для мужчин: BMR = 88.36 + (13.4 x вес, кг) + (4.8 х рост, см) – (5.7 х возраст, лет)\r\n    // для женщин: BMR = 447.6 + (9.2 x вес, кг) + (3.1 х рост, cм) – (4.3 х возраст, лет)\r\n\r\n    // в качестве data-attribute вносим инфу про коэффициенты активности (html)\r\n\r\n\r\n    const calcResult = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n\r\n    if(localStorage.getItem('sex')){\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female'; //значение по умолчанию, чтоб работала формула\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if(localStorage.getItem('ratio')){\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375; //значение по умолчанию, чтоб работала формула\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n\r\n    //функция, которая сработает 1 раз, чтобы установить классы активности в соответствии с localStorage\r\n    function initLocalSettings(parentSelector, activeClass){\r\n        const elements = document.querySelectorAll(`${parentSelector} div`);\r\n        console.log(elements);\r\n        elements.forEach(elem => {\r\n            console.log(elem);\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')){\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')){\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n    initLocalSettings('#gender', 'calculating__choose-item_active');\r\n    initLocalSettings('#activity', 'calculating__choose-item_active');\r\n\r\n\r\n    //расчёт калорий\r\n    function calcСalories(){\r\n        if (!sex || !height || !weight || !age || !ratio){\r\n            calcResult.textContent = '____';\r\n            return;//дальше программа функции идти не будет\r\n        } \r\n\r\n        if (sex === 'female'){\r\n            calcResult.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            calcResult.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    calcСalories();\r\n\r\n    function getStaticInfo(parentSelector, activeClass) {\r\n        const elements = document.querySelectorAll(`${parentSelector} div`);\r\n\r\n        //объединяем функцию для выбора пола и выбора активности и проверяем условием\r\n        //начилие id в первом случае и атрибута во втором\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) =>{\r\n                if (e.target.getAttribute('data-ratio')){\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n\r\n                    //хотим запомнить что он выбрал, чтобы сохранить и отобразить в след раз\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcСalories();\r\n            });\r\n        });\r\n    }\r\n    \r\n    getStaticInfo('#gender', 'calculating__choose-item_active');\r\n    getStaticInfo('#activity', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInfo(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            //если нашли что-то кроме цифры\r\n            if (input.value.match(/\\D/g)){\r\n                input.style.border = '1px solid red';\r\n            } else{\r\n                input.style.border = 'none';\r\n            }\r\n            //можно добавить подсказку, надпись, алгоритм один и тот же\r\n            //ну или просто запретить ему вводить нецифры? \r\n\r\n            switch(input.getAttribute('id')){\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n                //если введена не цифра, то превращается в NaN, что в логик контексте false\r\n            }\r\n            calcСalories();\r\n        });\r\n        \r\n    }\r\n    getDynamicInfo('#height');\r\n    getDynamicInfo('#weight');\r\n    getDynamicInfo('#age');\r\n}\r\n// module.exports = calc; //commonjs\r\nexport default calc;","import {getResourse} from '../services/services';\r\n\r\nfunction cards (){\r\n// ИСПОЛЬЗОВАНИЕ КЛАССОВ, ШАБЛОНИЗАЦИЯ КАРТОЧЕК\r\n    \r\n    class MenuCards {\r\n        //alt - что подставить вместо картинки, если не загрузилась\r\n        //parent - родительский div (селектор), в который мы будем вставлять карточку\r\n        //rest параметр не содержит default значение\r\n        constructor (picture, alt, h3, describ, price, parentSelector, ...classes){\r\n            this.picture = picture;\r\n            this.alt = alt;\r\n            this.title = h3;\r\n            this.describ = describ;\r\n            this.price = price;\r\n            this.classes = classes;//массив\r\n            this.parent = document.querySelector(parentSelector);//родитель один\r\n            this.transfer = 74;//курс валют (в данном случае доллары в рубли)\r\n            this.changeToRub();//тут же вызываем, значение this.price перезапшется (см функцию)\r\n        }\r\n\r\n        //метод перевода долларов в рубли\r\n        changeToRub(){\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        //классическое название для верстки - render()\r\n        writeHtml (){\r\n            //создаем карточку\r\n            const element = document.createElement('div');\r\n\r\n            //через условие проверим пустоту массива и тогда присвоим значение по умолчанию\r\n            //массив проверять через length\r\n            if(this.classes.length == 0){\r\n                this.classes = 'menu__item';\r\n                element.classList.add(this.classes);\r\n            } else{\r\n                this.classes.forEach(className => {element.classList.add(className);});\r\n                //в classes мы передаем все классы, которые хотим присвоить карточке. их может быть несколько, \r\n                //для кастомизации, поэтому мы добавляем в созданный div все классы, передающиеся в массив rest оператором\r\n            }\r\n\r\n            element.innerHTML= `\r\n                <img src=${this.picture} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.describ}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n\r\n    getResourse('http://localhost:3000/menu')//придет массив с объектами карточек\r\n        .then(data => {\r\n            //сколько будет карточек на сервере - столько раз их создаст\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                //разбили объект в свойства\r\n                // new MenuCards(obj.img, obj.altimg, obj.title ).writeHtml();\r\n                //не оч хорошо, когда мы перебираем свойства. используем деструктуризацию объетка\r\n                //вытаскиваем отдельные свойства в отдельную переменную\r\n\r\n                new MenuCards(img, altimg, title, descr, price, '.menu .container').writeHtml();\r\n            });\r\n        });\r\n}\r\nexport default cards;","import {closeModal, openModal} from './modal';\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms (formSelector, modalTimerId){\r\n        // FORMS\r\n\r\n    // Взять несколько форм и отправлять форму на server.php\r\n    // Чтобы не создавать 2 одинаковых обработчика, мы их запишем в функцию\r\n    // которую будем вызывать при отправке формы\r\n    \r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    //список фраз при отправке формы\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с Вами свяжемся!',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    //функция которая создается в потоке кода\r\n    //лучше выносить общение с сервером в отдельную функцию, тк разные формы, например,\r\n    //могут отправляться на разные сервера\r\n    \r\n\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();//убираем перезагрузку сервера при отправке формы\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.append(statusMessage);\r\n            //если хотим добавить ПОСЛЕ в форму, а не внутри неё в конец\r\n            //первый аргумент - куда, второй - что\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n\r\n            //formdata - спец объект, который позволяет с формы формировать\r\n            //данные в формате ключ-значение\r\n\r\n            const formData = new FormData(form);//передаетя форма из арг функции\r\n            //!в input необходимо всегда указывать атрибут name, иначе formdata не сможем работать\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // const obj2 = {a: 23, B: 50};\r\n            // console.log(Object.entries(obj2));\r\n            //метод берет объект, превращает его в массив, внутри которого массивы из двух элементов ключ-значение\r\n            //[ [ 'a', 23 ], [ 'B', 50 ] ] - матрица\r\n\r\n\r\n\r\n            //отправим Formdata\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);//data - данные, которые вернул сервер (промис)\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            })\r\n            .catch(() => {\r\n                showThanksModal(message.failure);\r\n            })\r\n            .finally(() => {\r\n                form.reset();\r\n            });\r\n        }); \r\n    }\r\n\r\n    //очистить кэш - shift + F5\r\n\r\n    //после отправки формы, всплывает окно с \"Спасибо!\"\r\n\r\n    function showThanksModal(message){\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        \r\n        prevModalDialog.classList.add('hide');\r\n        openModal('.modal', modalTimerId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        //спустя время модальное окно исчезает, форма возвращается\r\n        setTimeout(() => {\r\n            closeModal('.modal');\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n        }, 3000);\r\n    }\r\n\r\n\r\n    fetch('http://localhost:3000/menu')\r\n    .then(data => data.json())\r\n    .then(res => console.log(res));\r\n}\r\nexport default forms;","function openModal (modalSelector, modalTimerId) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add('show');\r\n    modal.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n\r\n    if (modalTimerId){\r\n        clearInterval(modalTimerId);\r\n    }\r\n    \r\n}\r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.remove('show');\r\n    modal.classList.add('hide');\r\n    document.body.style.overflow = '';\r\n}\r\n//тк эти функции нужны в другом модуле, выносим в отдельные функции\r\n//модуль может быть вызван для разных переменных. от одной сущности они зависеть не должны\r\n\r\n\r\n\r\nfunction modal(triggerButton, modalSelector, modalTimerId){\r\n    //значения аргументов подставляем в файле script.js \r\n\r\n    const modalOpen = document.querySelectorAll(triggerButton);\r\n    const modal = document.querySelector(modalSelector);\r\n\r\n    //для многих кнопок modalOpen\r\n    modalOpen.forEach(btn => {\r\n        btn.addEventListener('click', () => openModal(modalSelector, modalTimerId));\r\n\r\n        //btn.addEventListener('click', openModal(modalSelector));\r\n        //так нельзя писать, тк мы в данном случае вызываем функцию, а надо её просто указать,\r\n        //тк она должна выполниться строго после клика, а так она запустится сразу.\r\n    });\r\n\r\n\r\n    //закрытие по темному полю в пределах модального окна\r\n    modal.addEventListener('click', (e) =>{\r\n        //если нажимаем на подложку или на любой крестик (делегирование события крестика)\r\n        if (e.target === modal || e.target.getAttribute('data-close') == ''){\r\n            //проверяет нажатие по тегу с классом modal, а если нажать модальное окно, то выведет\r\n            // уже другой тег с классом. нажимаю на input - выведет input, а темное поле - только диф с классом modal\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n    //закрытие по клавише Esc\r\n    document.addEventListener('keydown', (e) => {\r\n        // console.log(e.code);\r\n        //code передает код клафиши\r\n\r\n        //проверяем, что модальное окно открыто: содержит класс show\r\n        if(e.code === \"Escape\" && modal.classList.contains('show')){\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n\r\n    // setTimeout позволяет вызвать функцию ОДИН раз через определённый интервал времени.\r\n    // setInterval позволяет вызывать функцию РЕГУЛЯРНО, повторяя вызов через определённый интервал времени.\r\n    // const modalTimerId = setTimeout(openModal, 8000);\r\n    //переносим эту переменную в скрипт.js, тк он используется в нескольких модулях.\r\n\r\n\r\n\r\n    //открывается модальное окно, когда долистали страницу до конца\r\n    //событие scroll на глобальном объекте window\r\n\r\n    const doc = document.documentElement;\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + doc.clientHeight >= doc.scrollHeight){\r\n            openModal(modalSelector, modalTimerId);\r\n            //когда один раз мы долистали до конца и сработало условие, мы\r\n            //показываем модальное окно и убираем обработчик события\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\nexport default modal;\r\nexport {closeModal};\r\nexport {openModal};","function slider ({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}){\r\n    // используем деструктуризацию в аргументе функции\r\n\r\n    const currSlide = document.getElementById(currentCounter),\r\n          slider = document.querySelector(container),\r\n          totalSlide = document.getElementById(totalCounter),\r\n          slides = document.querySelectorAll(slide),\r\n          leftArrow = document.querySelector(prevArrow),\r\n          rightArrow = document.querySelector(nextArrow),\r\n\r\n    //для второго\r\n          slidesWrapper = document.querySelector(wrapper),\r\n          slidesField = document.querySelector(field),\r\n          widthSlide = window.getComputedStyle(slidesWrapper).width;\r\n    //мы не можем вытащить значение ширины элемента с помощью style.width, тк это inline style, которого у элемента нет\r\n    //computedstyle - это то, что мы можем увидеть в панели разработчика\r\n\r\n    let id = 0;//можно было и id = 1\r\n    let offset = 0;//отступ\r\n\r\n    // Добавление навигации по слайдам\r\n    const indicators = document.createElement('ol'),\r\n    dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++){\r\n        const dot = document.createElement('li');\r\n        //через атрибуты\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n        if (i == 0){\r\n            dot.style.opacity = 1;\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    //второй вариант (как slickslider, когда это карусель и слайды выстраиваются в ряд, но скрыты)\r\n    //сначала добавляем ещё одну обертку для слайдов - offer__slider-inner\r\n    //wrapper - \"окно\" со свойством overlow: hidden, a inner - блок со слайдами, ширина которого будет сумма всех слайдов\r\n    //поэтому мы будем передвигать слайды, а не показывать\r\n\r\n    if (slides.length < 10){\r\n        totalSlide.innerHTML = `0${slides.length}`;\r\n    } else {\r\n        totalSlide.innerHTML = slides.length;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';//так прописываем процент, потому что это единица измерения для css\r\n    //количество процентов относительно родителя => в slides.length раз больше чем родитель\r\n    slidesField.style.display = \"flex\";\r\n    slidesField.style.transition = \"0.5s all\";\r\n    slidesWrapper.style.overflow = \"hidden\";\r\n\r\n    slides.forEach(slide =>{\r\n        slide.style.width = widthSlide;\r\n    });\r\n\r\n    // let widthNumber = +widthSlide.slice(0, widthSlide.length - 2);//width=\"500px\" убираем px\r\n    //с помощью регулярного выражения\r\n    // let widthNumber = +widthSlide.replace(/\\D/g, '');//буквы просто удалятся, в тч всякие %, например\r\n\r\n    //но лучше создать функцию, внутри которой передавать строку, в которой нужно избавиться от всех нечисел, чтобы это была не только width\r\n    function transformStrToNum (str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n    //вызываем её везде, где необходима трансформация значения ширины\r\n\r\n    //обновляем номер слайда на странице и сдвигаем слайд\r\n    const transformSlides = function(){\r\n        if (id + 1 < 10){\r\n            currSlide.innerHTML = `0${id + 1}`;\r\n        } else {\r\n            currSlide.innerHTML = id + 1;\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n    };\r\n\r\n    //показываем нужную точку после перелистывания слайда\r\n    const showCurrDot = function(){\r\n        dots.forEach(dot => {\r\n            dot.style.opacity = 0.5;\r\n        });\r\n        dots[id].style.opacity = 1;\r\n    };\r\n\r\n    //нажали стрелку, проверяем граничные значения, меняем их, меняем инфу на странице\r\n    rightArrow.addEventListener('click', () => {\r\n        if(offset == transformStrToNum(widthSlide) * (slides.length-1)){ \r\n            offset = 0;\r\n        }else{\r\n            offset+= transformStrToNum(widthSlide);//+= то же самое что offset = offset + ...\r\n        }\r\n\r\n        if (id == slides.length - 1) {\r\n            id = 0;\r\n        }else{\r\n            id++;\r\n        }\r\n\r\n        transformSlides();\r\n        showCurrDot();\r\n    });\r\n    leftArrow.addEventListener('click', () => {\r\n        if(offset == 0){ \r\n            offset = transformStrToNum(widthSlide) * (slides.length-1);\r\n        }else{\r\n            offset-= transformStrToNum(widthSlide);\r\n        }\r\n\r\n        if (id == 0) {\r\n            id = slides.length - 1;\r\n        }else{\r\n            id--;\r\n        }\r\n\r\n        transformSlides();\r\n        showCurrDot();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            id = slideTo - 1;\r\n            offset = transformStrToNum(widthSlide) * (slideTo - 1);\r\n\r\n            transformSlides();\r\n            showCurrDot();\r\n        });\r\n    });\r\n\r\n\r\n    //первый вариант (очевидный)\r\n    //________________________________________________________\r\n    // if (slides.length < 10){\r\n    //     totalSlide.innerHTML = `0${slides.length}`;\r\n    // } else {totalSlide.innerHTML = slides.length;}\r\n\r\n\r\n    // function showSlide (id) {\r\n    //     slides.forEach(item =>{\r\n    //         item.classList.add('hide');\r\n    //         item.classList.remove('show', 'animation');\r\n    //     });//скрыли все\r\n\r\n    //     //показали нужный\r\n    //     slides[id].classList.add('show', 'animation');\r\n    //     slides[id].classList.remove('hide');\r\n\r\n    //     //вывели номер слайда\r\n    //     if (id + 1 < 10) {\r\n    //         currSlide.innerHTML = `0${id + 1}`;\r\n    //     } else {currSlide.innerHTML = id + 1;}\r\n    // }\r\n\r\n    // showSlide(id);\r\n\r\n    // rightArrow.addEventListener('click', (event) => {\r\n    //     id++;\r\n    //     if (id === slides.length) {\r\n    //         id = 0;\r\n    //     }\r\n    //     showSlide(id);\r\n    // });\r\n\r\n    // leftArrow.addEventListener('click', (event) => {\r\n    //     id--;\r\n    //     if (id === -1) {\r\n    //         id = slides.length - 1;\r\n    //     }\r\n    //     showSlide(id);\r\n    // });\r\n    //________________________________________________________\r\n}\r\nexport default slider;","function tabs (tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    // TABS\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n          tabsContent = document.querySelectorAll(tabsContentSelector) ,\r\n          tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n\r\n    function hideTabContent(){//скрыла весь контент\r\n        tabsContent.forEach(item =>{\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'animation');\r\n        });\r\n        tabs.forEach(tab =>{\r\n            tab.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n\r\n    function showTabContent(i = 0){//см ниже, аргумент по умолчанию. если при вызове есть аргмуент, не учитывается\r\n        tabsContent[i].classList.add('show', 'animation');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;//сокращение \r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))){\r\n            //если мы в аргументе функции (главной), передаем класс с точкой, а нам нужно его использовать\r\n            // без точки, например, в classList.add, то модифицируем с помощью slice(1) - сформирует новую строку без первого символа\r\n\r\n            //нужно узнать номер таба, на который нажали и отображать нужный контент\r\n            tabs.forEach((item, i) => {//item = таб, i - номер\r\n                if (target == item) {\r\n                    hideTabContent();//скрываем то, что было до этого открыто\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//COMMON JS\r\n// module.exports = tabs;\r\nexport default tabs;","function timer (timerSelector, deadline){\r\n// TIMER\r\n\r\n    // const deadline = '2021-08-24'; // вынесли в script.js как аргумент\r\n\r\n    //функция, определяющая разницу между дедлайном и текущем временем\r\n    function getTimeRemaining(endtime){\r\n\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n        //количество миллисекунд в конечном времени, до которого нужно досчитать\r\n        \r\n        //теперь надо эти миллисекунды нужно превратить в часы, минуты и тп\r\n        const days = Math.floor(t / 86400000);\r\n\r\n        const hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n        //% делит на 24 и возвращает остаток от деления (то, что не хватает до полных суток)\r\n        \r\n        const minutes = Math.floor((t / (1000 * 60)) % 60);\r\n        const seconds = Math.floor((t / 1000) % 60);\r\n\r\n\r\n\r\n        return{//создаем объект и сразу возвращаем\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    } \r\n    \r\n    //функция добавления в день и часы 0 перед цифрой, если число меньше 10 (частое требование)\r\n    function getZero(num){\r\n        if (num >=0 && num<10){\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime){\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();//вручную вызываем функцию, тк из-за setInterval она сработает только через секунду\r\n\r\n        //функция обновления таймера каждую секунду\r\n        function updateClock(){\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0){\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock(timerSelector, deadline);\r\n\r\n}\r\nexport default timer;","//выносим в отдельные файлы, тк это просто функция получения, она может использоваться неоднократно\r\nconst postData = async (url, data) => {\r\n    //делаем запрос и можем сразу обработать\r\n\r\n    //это асинхронный код, поэтому fetch может идти долго, поэтому в переменную ничего не помещается\r\n    //механизм, превращающий асинхронный код в синхронный \r\n    //async (перед функцией, типо в функции есть синхронный код), await (используются в паре)\r\n\r\n    const res = await fetch(url, {\r\n        method: \"POST\",\r\n        //но потом мы сделаеи, то в postdata передается аргумент, овтечающий за формат данных,\r\n        //в зависимости от которого будет создаваться нужный заголовок\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n    \r\n    //перевод тоже может долго идти\r\n    return await res.json();\r\n};\r\n\r\n//делает get запрос для формирования карточек\r\nconst getResourse = async (url) => {\r\n    const res = await fetch(url);\r\n\r\n    //fetch не выдаст catch из-за ошибки http-запроса, поэтому вручную исправляем это\r\n    //свойства у промиса, возвращаемого из fetch - ok и status\r\n\r\n    if (!res.ok) {\r\n        //объект ошибки\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    \r\n    //перевод тоже может долго идти\r\n    return await res.json();//это промис\r\n};\r\n\r\nexport {postData};\r\nexport {getResourse};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//npx json-server db.json\r\n//npx webpack\r\nimport calc from './modules/calc';\r\nimport cards from './modules/cards';\r\nimport forms from './modules/forms';\r\nimport modal from './modules/modal';\r\nimport slider from './modules/slider';\r\nimport tabs from './modules/tabs';\r\nimport timer from './modules/timer';\r\nimport {openModal} from './modules/modal';\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // CommonJs\r\n    // const calc = require('./modules/calc'),\r\n    //       cards = require('./modules/cards'),\r\n    //       forms = require('./modules/forms'),\r\n    //       modal = require('./modules/modal'),\r\n    //       slider = require('./modules/slider'),\r\n    //       tabs = require('./modules/tabs'),\r\n    //       timer = require('./modules/timer');\r\n\r\n    const modalTimerId = setTimeout(() => openModal('.modal', modalTimerId), 8000);\r\n    \r\n    calc();\r\n    cards();\r\n    forms('form', modalTimerId);\r\n    modal('[data-modal]', '.modal', modalTimerId);\r\n    slider({\r\n        container: '.offer__slider',\r\n        nextArrow: '.offer__slider-next',\r\n        prevArrow: '.offer__slider-prev',\r\n        slide: '.offer__slide',\r\n        totalCounter: 'total',\r\n        currentCounter: 'current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.offer__slider-inner'\r\n    });//записать можно в любом порядке\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    timer('.timer', '2021-10-22');\r\n});\r\n\r\n"],"names":[],"sourceRoot":""}